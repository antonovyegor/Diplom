Як фізичне явище, звук представляє собою механічне коливання у деякому середовищі. Як і будь-яка інша хвиля, звук характеризується амплітудою, частотою, тиском та складом [3]. 
Частота або ж висота звуку – фізична величина, що характеризує кількість повторів певної події за 1 секунду часу. Але через те, що звук є складним процесом і найчастіше являє собою суму кількох гармонік, то висотою звуку називають частоту найбільш помітної гармоніки(основного тону).
Амплітуда – фізична величина, що характеризує найбільше зміщення сигналу, що періодично змінюється. Гучність залежить не лише від амплітуди, а й від частоти та спектрального складу [10,11].
Гучність звуку є відносною величиною і дорівнює рівню звукового тиску, створюваного синусоїдальним тоном з частотою 1кГц. Тобто частоти з однаковою амплітудою створюють різним за рівнем тиск в залежності від частоти. На рисунку 1.1 наведено графік рівня звукового тиску.Отже будь-який звук, як в музиці так і в природі, є складним звуком, тобто складається з багатьох гармонік різної частоти та амплітуди. Але при цьому можна виділити основний фон з найбільшою амплітудою. Інші з гармоніки називаються обертонами. Так для кожного інструменту є приклади його спектрального складу або ж як кажуть у музиці – тембру. Так як звук музичних інструментів є періодичним, то будь-який тембр можна виразити сумою гармонік з різними параметрами. На рисунку 1.2 наведено тембри декількох інструментів [4]. Цифрові синтезатори не можуть в повній мірі зімітувати гру справжнього інструменту, але від них цього і не вимагають, так як очікують отримати як раз неординарний звук. Але все ж сучасні синтезатори можуть мати до 5 осциляторів, що генерують тон та 4 додаткові обертони. Як правило частота кожного наступного обертону у два рази більша попереднього. Тобто ця операція не вимагатиме багато ресурсів для множення, а буде реалізована простим зсувом числа.Як відомо, аналоговий сигнал є неперервним, тобто він не має якихось певних відліків його значення, на відміну від дискретного який власне і є основою цифрової техніки. Через це дуже важливою особливістю сигналу є його квантування. В залежності від обраної розрядності числа, у яке буде переведено аналоговий сигнал, залежить з якою похибкою цифрове представлення буде відрізнятися від аналогового. 
	Крок квантування – це розрив між двома цифровими кодами і аналогове значення, що знаходиться між цими кодами буде округлятися.Звідси виникло поняття шуму квантування. Цей шум спеціально додають до сигналу, щоб якось зменшити відмінності між оригіналом та отриманим цифровим значенням. На цьому рисунку червоною лінією зображено оригінальний сигнал, зеленою цифрове представлення, а синьою різницю, що була втрачена під час перетворення. Звісно схема не може з повною ймовірністю знати значення цієї різниці, але існують спеціальні методи, наприклад алгоритм Флоід-Стейнберга. 
	Інша, найбільш популярна операція з сигналами, це фільтрація. Стандартні для DSP цифрові фільтри це CIC та FIR, обидва характеризуються порядком.   
	CIC фільтр – інтегрально-гребінчастий фільтр використовується для децимації та інтерполяції (зменшення та збільшення частоти дискретизації). Головної відмінністю і перевагою цього фільтра є відсутність операцій множення, що займають багато ресурсів на ПЛІС та часу. Через це використання його у ПЛІС є дуже популярним. Цей фільтр складається з двох послідовно з’єднаних інтегратора та гребінчастого фільтрів. Інтегратор задається таким рівнянням(1.3). При частоті рівній нулю чисельник і знаменник будуть рівні нулю, тому значення АЧХ буде стримитися до D. Таким чином при D=1 цей фільтр буде пропускати все, три інших значенням CIC можна використовувати як фільтр нижніх частот. На рисунку 1.9 (а, б, в) зображені АЧХ при різним затримках.КІХ фільтр (кінцева імпульсна характеристика) так само як і БІХ може використовуватися для ФНЧ, ФВЧ, смугових та фільтрів інших форм. Усі КІХ фільтри описуються такою формулою.Велике значення відіграє розрядність коефіцієнтів та проміжних даних і власне довжина фільтра. Мала розрядність чисел може призвести до спотворення АЧХ фільтра та до помилок квантування.  Загалом КІХ фільтр є набагато більшим, адже потребує багато блоків множення та блоки пам’яті для збереження коефіцієнтів та пам’ять для затримок даних, але його перевагою є саме можливість реалізувати обвідну хвилі майже будь-якої форми, змінюючи коефіцієнти. Нота – умовний символ, що характеризує висоту звуку. 
Октава – відстань між двома тонами, частоти яких відрізняються у  2 рази, наприклад нота До 2-ї октави у 2 рази вище за ноту До 1-ї. Також октавою називають 7 основних тонів та 5 полу тонів. На рисунку 1.11 зображена одна октава, що містить 12 тонів. На рисунку 1.12 зображені всі існуючі октави [13]. 
Існує багато способів синтезувати звук [5] : 
•	Адитивний. Даний метод синтезу полягає у додаванні до основного тону ще декількох гармонік кратної частоти. Прикладом адитивного синтезу є орган. 
•	Субтрактивний. Цей метод є зворотнім до адитивного. Заснований на «відніманні» від сигналу його складових, тобто заснований на фільтрах.
•	Семплювання. Цей метод заснований на отримані звуку з записаного файлу та його подальшій обробці. Схожий на wavetable. 
•	FM/AM синтез. Вхідний тембр звуку спотворюється завдяки іншому(моделюючому) сигналу, що впливає на його форму. 
•	Фізичне моделювання. Використовує математичні моделі для отримання звуку.
•	Wavetable синтез
•	Інші
Раніше пристрої могли синтезувати тільки синусоїдальні сигнали (аналогові синтезатори). З приходом транзисторів з’явилася можливість синтезувати трикутні, прямокутні, пилу та імпульсні сигнали. На рисунку 1.13 наведені ці форми сигналів [12].

Синусоїдальні або як їх ще називають прості, адже з них отримується складний звук.
Прямокутні(меандр) – така форма сигналу використовується для імітації басових звуків і духовних інструментів.
Пиловидні – використовуються для смичкових інструментів.
Трикутні сигнали – їх звучання найбільш схоже на звук труби органу.
Імпульсні сигналі є прямокутними з певною скважністю. Скважність К означає, що сигнал включає всі гармоніки, крім гармонік кратних К.
В класичних синтезаторах усі форми звуку генеруються осцилятором (VCO/DCO) і далі вже йдуть на обробку. Генерація відбувається безперервно [7]. У VCO частота регулюється рівнем напруги, у цифровому ж подається значення що додається до акумулятора. 
1.7.2.	Зміна гучності
В аналогових синтезаторах обробка гучності відбувається у VCA – підсилювач контрольований напругою. В цифровому синтезі це можна реалізувати за допомогою помножувача на певний коефіцієнт.
1.7.3.	Фільтр
Використовується для обмеження чи контрастності певного діапазону частот. Як правило це фільтр низьких частот, фільтр високих частот та смуговий фільтр.

1.7.4.	Генератор обвідної хвилі
Генератором обвідної хвилі може бути низькочастотний фільтр з можливістю вибору форми або генератор ADSR, що є більш складним. За допомогою цього генератора вихідна гучність змінюється за кривою, що задана у ньому. Таким чином можна досягти звучання схожого на певний інструмент. На рисунку 1.15 можна побачити обвідні, що характерні деяким інструментам [8].Архітектура ARM представлена мікроконтролерами Cortex STM32. Дані мікроконтролери досить розвинені, найбільш продуктивна версія цього мікроконтролеру Cortex-M4.  Наразі найпопулярніші рішення  мають 32-бітну архітектуру, постійну пам’ять, оперативну пам’ять, таймери, інтерфейси обміну даними, швидку обробку переривань та працюють на частотах до 168 МГц.  Компанія розміщує на кристалі мікроконтролер та DSP. Завдяки окремому блоку DSP, що виконує операції з плаваючою комою, цей мікроконтролер можна використовувати в нестандартних для нього проектах. Ядро підтримує множення з накопленням (МАС) за 1 такт,  обчислювальний блок FPU, що виконує операції за 1 такт та SIMD.
Структура також вражає, мікроконтролер має безліч інтерфейсів( I2C, SPI, USART, USB, camera interface, Ethernet) та аналогових засобів (АЦП, ЦАП). На рисунку 2.2 зображена структурна схема ядра. Дійсно це сімейство мікроконтролерів, вражає та розширює ринок їх використання. Необхідність у використанні окремих чипів DSP зникла, а багата периферія дозволяє реалізувати проекти значної складності. 
 Але мікроконтролер виконує послідовність команд, тому його можливості не безграничні. У разі досить довгого ланцюга фільтрів та обробок, час реакції на зовнішні події збільшиться, і звісно досягти паралельного генерування не вдасться, що призведе знову ж таки до неприпустимих затримок. 
2.2.	 Програмний додаток на ПК(синтез на ЦП)
Звичайно ЦП комп’ютера як і мікроконтролер виконує послідовність команд, але його архітектура набагато розвиненіша за мікроконтролер.
Перевагою процесора є наявність спеціалізованих блоків та інструкцій що виконують швидкі перетворення над числами великої розрядності. Також неможна забувати про наявність, як мінімум 2-х ядр, що працюють паралельно. Тому ця система  підходить для реалізації даного проекту. Це підтверджено багатьма програмними доданками, що існують у даний час. Але існують і недоліки: 
•	Вартість такої системи перевищує вартість окремих пристроїв, адже необхідний досить потужний, а отже і коштовний процесор та коштовне програмне забезпечення
•	Вимагає окремого комп’ютера для роботи, наприклад у студії або на концерті
•	Вимагає окремої клавіатури, що приєднується до ПК
•	Навіть на швидкісних процесорах виникають деякі затримки
2.3.	 Схема синтезатора складена з окремих мікро чипів, пам’яті, периферії
На даний момент, це найпопулярніший варіант синтезатора. Його переваги полягають у спеціалізований чипах, що реалізують цифрову обробку сигналів (DSP), де виконується усе генерування та обробка ефектами. Наявний процесор виконує функції керування екраном та усіма клавішами налаштувань, що наявні на корпусі, також реалізує зв’язок з оперативною пам’яттю. Хоча і сам чип DSP має підключення до постійної пам’яті. На рисунку 2.3 наведена схема такого синтезатора.Найбільшу увагу треба звернути саме на мікросхему DSP. Ці процесори виконують операції над числами з фіксованою, або плаваючою комою, найчастіше мають архітектуру VLIW або SIMD і працюють на частотах до 1 ГГц. Нижче представлений опис найбільш популярних процесорів  з фіксованою комою: сімейство Blackfin від компанії ADI, MSC81XX від Freescale, TMS320C64X від Texas Instruments. Усі ці процесори являються 16-бітними, використовують архітектуру VLIW та мають декілька блоків MAC(multiply-accumulate), що виконують функцію множення і додавання. Середня ціна таких процесорів 30 доларів.  Але існують і багатоядерні рішення з масовим паралелізмом, що мають нижчу продуктивність і меншу ціну. Найкращим же рішенням є процесори з плаваючою комою від виробників Texas Instruments та Analog Devices. Побудовані на базі 8-тактної архітектури VLIW, мають набір інструкцій з фіксованою комою, але й спеціалізовані окремі блоки для роботи з плаваючою комою, можуть виконувати дві 32-бітні МАС-операції на частоті 350МГц. Ціна такого процесора близька до 200 доларів [9]. До цього усі можливі рішення були засновані на процесорах, спеціалізованих процесорах, швидкому виконанні послідовності команд. Але тепер розглянемо ПЛІС (Програмовану логічну інтегральну схему). ПЛІС не виконує команди, а за допомогою мови опису апаратури, наприклад VHDL або Verilog, дозволяє написати такі блоки, що виконують певну дію безперервно в режимі конвеєру. Використовуючи ПЛІС ми не прив’язані до кількості ядр, що можуть одночасно виконати обмежену кількість операцій, ми можемо встановити певну кількість блоків, що будуть працювати одночасно і незалежно. Сучасні архітектури ПЛІС навіть не вимагають додаткової периферії такої як інтерфейс обміну даними з пам’яттю або комп’ютером, адже будь-яку схему можна реалізувати всередині кристалу. Сучасні ПЛІС вже мають вбудовану пам'ять, швидкісні інтерфейси вводу\виводу(PCI Express), спеціалізовані блоки множення, блоки PLL, що дозволяють отримати надвисокі частоти роботи. І все це починаючи від 10 доларів за кристал з 6 тисячами логічних комірок. В цьому випадку найбільшою проблемою є саме проектування схеми. І так як уся схема знаходиться на одному кристалі і звільняє нас від з’єднань між різними мікросхемами, то надійність такою системи вища. Як результат, FPGA може бути імплемінтована в будь-який проект: 
•	пристрої комунікації(маршрутизатори)
•	обробка картинок та відео
•	прискорення математичних розрахунків
•	інші швидкісні схеми
Інший варіант SoC, що поєднує мікропроцесор та ділянку FPGA, дозволяє поєднувати 2 способи роботи, мікрокоманди процесора та паралельні блоки на FPGA. 
Існують багато технологій за якими виробляють програмовані логічні схеми схеми. На рисунку 2.5 наведені основні типи ПЛІС [14,15].
Кожне з цих сімейств відрізняється шляхом програмування, способом з’єднання ліній та багато чим іншим. Старші сімейства починалися з плавких контактів, тобто схему можна було прошити лише раз, інші мали енергонезалежну пам’ять, яку потрібно було прошивати. І лише з приходом CPLD та FPGA вдалося отримати енергонезалежну схему з безмежною кількістю перепрограмувань, що відбувалися дуже легко. На рисунку 2.6  показані види контактів, що «програмуються» [14,15].  Fusible-link – легкоплавке з’єднання, за допомогою спеціального програматора, непотрібні зв’язки руйнувалися, перепрограмування неможливе.
Antifuse – як і легкоплавке з’єднання antifuse є одноразовим, в початковому стані antifuse є розімкненим, і лише при протіканні току – з’єднується. Фізика процесу зворотна до запобіжника.
EPROM транзистор – до його виникнення у 1971 році усі зв1язки програмувалися лише раз. Тому створення транзистора було обов’язковим. Плаваючий затвор повністю ізольований від усіх інших частин і тому може зберігати свій стан та придатний до стирання за допомогою ультрафіолету. За допомогою більш високої напруги проходив запис у транзистор, що відповідав одному біти. Так програмування інтегральної схеми звелося до очистки пам’яті ультрафіолетом та прошиванню чипа  на програматорі.
EEPROM – ця пам’ять стала наступним кроком. Комірка пам’яті тепер могла бути очищена напругою.
SRAM – постійна оперативна пам’ять. Відрізнялась зворотнім зв’язком, що звільнило від періодичних перезаписів динамічної пам’яті. Енергозалежна пам’ять, але найпростіший спосіб читання\запису. Стирання пам’яті при вимкнені живлення призводить до встановлення Flash-пам’яті. При кожному вмиканні FPGA прошиває сама себе. 
 	FPGA від різних виробників можуть відрізнятися архітектурою і структурними частинами, але все ж мають однакову базу. Концепція полягає у програмованих блоках, що складаються з LUT( look-up table)(таблиця істинності), тригера та мультиплексора. FPGA складається з багатьох блоків, починаючи від декількох тисяч, закінчуючи мільйонами. 
	Та логічні блоки також бувають різних типів. На рисунку 2.7 зображений MUX-блок, що реалізує необхідну функцію за допомогою багатьох мультиплексорів.


Альтернативою і основним типом логічних блоків є LUT. На рисунку 2.8 зображена реалізація тої самої функції.  Ця таблиця істинності програмується у елемент. Для забезпечення гнучкості FPGA має логічні елементи з різної кількістю входів, тобто LUT, що реалізує функцію від різної кількості змінних
Деякі функції, наприклад множення, ділення, підведення до степені, займають багато місця і працюють повільно якщо вони реалізовані на логічних елементах. Саме через це створили жорсткі блоки всередині ПЛІС – вбудовані помножувачі. Вони розподілені по всьому кристалу, розміщуються поряд с блоками RAM. Деякі ПЛІС мають виділені блоки суматорів, бо однією з популярних операцій DSP є MAC(multiply-and-accumulate). На рисунку 2.9 зображена ця операція. 

Коли написаний код перетворюється у схему, важливо розуміти як саме компілятор це зробить. Адже однакові на перший погляд ділянки коду можуть мати різну швидкість та займати більше ресурсів. Далі наведено приклади різниці між послідовним та паралельним способами опису схеми. 
На рисунку 2.10 Зображена згенерована схема, як видно з коду схема реалізує мультиплексор, але конструкція if-then-else призвела до послідовного поєднання багатьох мульплексорів, саме така поведінка призведе до затримки та займе більше логічних елементів. 


Можна зробити висновок, що будь-який проект можна реалізувати сотнями способів, що будуть працювати абсолютно по-різному, мати різну конфігурацію, будуть використовувати різну кількість логічних блоків та спеціалізованих. Часто при використанні IP cores, користувачу дається вибір чи використовувати спеціалізовані блоки чи будувати схему на логічних елементах, чи акцентувати увагу на швидкість чи на економію місця. На рисунку 2.12 наведений приклад, що показує 2 різні реалізації однієї функції.
Як видно з рисунку, перший варіант реалізовано послідовно. Спочатку відбудеться порівняння, результат його потрапить на мультиплексор і вже  його результат потрапить на суматор. Цей варіант займає 32 логічні елементи, але через те що в ланцюгу стоїть три блоки, максимальна частота такої схеми 87 МГц. Інший варіант спрямований на швидкість. Додавання в цьому варіанті відбувається в обох випадках і паралельно з цим відбувається порівняння B і C. В цьому ланцюгу послідовність з 2 блоків, тому частота цієї схеми може бути 133 МГц, що в півтора рази більше. 


Логічні елементи(LЕs) є найменшими блоками в архітектурі ПЛІС. Кожен ЛЕ має [1,2] :
•	LUT. Чотирьох входовий блок, що реалізує функцію за таблицею істинності;
•	Програмований регістр;
•	Вихід регістру ;
•	Вихід функції LUT.
Регістр можна запрограмувати на D,RS,T,JK тригер. Кожен регістр має порти вхідних даних, синхронізації, дозволу синхронізації, очистки.
Кожен LE має три виходи, які керують локальними, рядковими та колонковими ресурсами маршрутизації. На рисунку 2.13 зображений один логічний елемент.
Кожна LAB(logic array block) складається з таких функцій [1,2]:
•	16 ЛЕ;
•	Сигнали керування LAB;
•	ЛЕ-сполучення;
•	Регістрові сполучення;
•	Місцеві з’єднання між ЛЕ.
Локальні сполучення передають сигнали між ЛЕ в одній LAB. Регістрові сполучення передають сигнали між регістрами ЛЕ в одній LAB. Cyclone IV включає в собі вбудовані модулі пам’яті M9K, що налаштовуються на різні функції, такі як: оперативна пам’ять, регістри зсуву, ROM, FIFO. На рисунку 2.14 зображений кристал Cyclone IV, розміщення основних частин [1,2].

Переглянувши усі доступні системи реалізації цифрового синтезатора, оптимальний вибір падає на ПЛІС. Вартість такого рішення набагато менша за вартість спеціалізованих процесорів, а швидкодія і часові затримки набагато менші ніж у мікроконтролерах. Гнучкість ПЛІС дозволяє проектувати різні фільтри, обробки сигналу, інтерфейси зв’язку з ПК та багато іншого. При тому маючи продукт його покращення не потребує замін деталей, корпусу та всього іншого, а полягає лише у зміні налаштувань ПЛІС. Це дозволяє робити унікальні продукти для кожного користувача в залежності від його потреб. В наступному розділі будуть описані модулі, що були розроблені для синтезатора на мові опису апаратури  VHDL.



